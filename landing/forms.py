from django import forms
from .models import QuestionnaireResult


class QuestionnaireForm(forms.ModelForm):
    
    # –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ–ª—è —â–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏
    business_sphere = forms.ChoiceField(
        choices=[
            ('goods', '–¢–æ–≤–∞—Ä–∏ (—ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω, –∫–∞—Ç–∞–ª–æ–≥)'),
            ('services', '–ü–æ—Å–ª—É–≥–∏ (–∫–ª—ñ–Ω—ñ–∫–∞, —Å–∞–ª–æ–Ω, —Å—Ç—É–¥—ñ—è)'),
            ('education', '–û—Å–≤—ñ—Ç–∞ / –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∏'),
            ('personal_brand', '–û—Å–æ–±–∏—Å—Ç–∏–π –±—Ä–µ–Ω–¥'),
            ('startup', '–°—Ç–∞—Ä—Ç–∞–ø / –Ü–¢ –ø—Ä–æ–¥—É–∫—Ç'),
        ],
        widget=forms.RadioSelect(attrs={'class': 'form-radio'}),
        label='–£ —è–∫—ñ–π —Å—Ñ–µ—Ä—ñ –ø—Ä–∞—Ü—é—î –≤–∞—à –±—ñ–∑–Ω–µ—Å?'
    )
    
    main_goal = forms.ChoiceField(
        choices=[
            ('sales', '–ü—Ä–æ–¥–∞–∂—ñ / –∑–∞—è–≤–∫–∏'),
            ('presentation', '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ—è –±—ñ–∑–Ω–µ—Å—É'),
            ('blog_expertise', '–ë–ª–æ–≥ + –µ–∫—Å–ø–µ—Ä—Ç–Ω—ñ—Å—Ç—å'),
            ('landing_ads', '–õ–µ–Ω–¥—ñ–Ω–≥ –ø—ñ–¥ —Ä–µ–∫–ª–∞–º—É'),
        ],
        widget=forms.RadioSelect(attrs={'class': 'form-radio'}),
        label='–Ø–∫–∞ –≤–∞—à–∞ –≥–æ–ª–æ–≤–Ω–∞ –º–µ—Ç–∞ —Å–∞–π—Ç—É?'
    )
    
    # –ü–∏—Ç–∞–Ω–Ω—è 3: –©–æ –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–µ (–º–Ω–æ–∂–∏–Ω–Ω–∏–π –≤–∏–±—ñ—Ä)
    PRIORITIES_CHOICES = [
        ('modern_design', '–°—É—á–∞—Å–Ω–∏–π –¥–∏–∑–∞–π–Ω'),
        ('fast_loading', '–®–≤–∏–¥–∫–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è'),
        ('seo_promotion', 'SEO —Ç–∞ –ø—Ä–æ—Å—É–≤–∞–Ω–Ω—è'),
        ('ai_integration', '–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –®–Ü'),
        ('client_simplicity', '–ü—Ä–æ—Å—Ç–æ—Ç–∞ –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞'),
    ]
    
    priorities_selected = forms.MultipleChoiceField(
        choices=PRIORITIES_CHOICES,
        required=False,
        widget=forms.CheckboxSelectMultiple(attrs={'class': 'priority-checkbox'}),
        label="üß† –©–æ –¥–ª—è –≤–∞—Å –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–µ? (–º–æ–∂–Ω–∞ –æ–±—Ä–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞)"
    )
    
    # –ü–∏—Ç–∞–Ω–Ω—è 4: –î–∂–µ—Ä–µ–ª–∞ —Ç—Ä–∞—Ñ—ñ–∫—É (–º–Ω–æ–∂–∏–Ω–Ω–∏–π –≤–∏–±—ñ—Ä)
    TRAFFIC_CHOICES = [
        ('instagram_tiktok', 'Instagram / TikTok'),
        ('google_seo', 'Google —Ä–µ–∫–ª–∞–º–∞ / SEO'),
        ('referrals', '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó / —Å–∞—Ä–∞—Ñ–∞–Ω–Ω–µ —Ä–∞–¥—ñ–æ'),
        ('email_content', 'Email / –∫–æ–Ω—Ç–µ–Ω—Ç'),
    ]
    
    traffic_sources_selected = forms.MultipleChoiceField(
        choices=TRAFFIC_CHOICES,
        required=False,
        widget=forms.CheckboxSelectMultiple(attrs={'class': 'traffic-checkbox'}),
        label="üì± –Ø–∫ –ø–ª–∞–Ω—É—î—Ç–µ –∑–∞–ª—É—á–∞—Ç–∏ —Ç—Ä–∞—Ñ—ñ–∫? (–º–æ–∂–Ω–∞ –æ–±—Ä–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞)"
    )
    
    # –ü–∏—Ç–∞–Ω–Ω—è 5: –ü–æ—Ç—Ä—ñ–±–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó (–º–Ω–æ–∂–∏–Ω–Ω–∏–π –≤–∏–±—ñ—Ä)
    FEATURES_CHOICES = [
        ('online_payment', '–û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞ / –∫–æ—à–∏–∫'),
        ('contact_form', '–§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏ + –∞–≤—Ç–æemail'),
        ('blog', '–û–Ω–ª–∞–π–Ω-–±–ª–æ–≥'),
        ('calendar_booking', '–ö–∞–ª–µ–Ω–¥–∞—Ä / –∑–∞–ø–∏—Å'),
        ('other', '–Ü–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç'),
    ]
    
    features_selected = forms.MultipleChoiceField(
        choices=FEATURES_CHOICES,
        required=False,
        widget=forms.CheckboxSelectMultiple(attrs={'class': 'feature-checkbox'}),
        label="üîß –Ø–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω—ñ? (–º–æ–∂–Ω–∞ –æ–±—Ä–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞)"
    )
    
    class Meta:
        model = QuestionnaireResult
        fields = [
            'name', 'email', 'phone', 'business_sphere', 'main_goal'
        ]
        
        widgets = {
            'name': forms.TextInput(attrs={
                'class': 'form-control form-input',
                'placeholder': '–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º\'—è'
            }),
            'email': forms.EmailInput(attrs={
                'class': 'form-control form-input',
                'placeholder': 'your@email.com'
            }),
            'phone': forms.TextInput(attrs={
                'class': 'form-control form-input',
                'placeholder': '+380XXXXXXXXX'
            }),
        }
        
        labels = {
            'name': '–Ø–∫ –≤–∞—Å –∑–≤–∞—Ç–∏?',
            'email': '–í–∞—à email –¥–ª—è –∑–≤\'—è–∑–∫—É',
            'phone': '–¢–µ–ª–µ—Ñ–æ–Ω (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)',
        }
    
    def save(self, commit=True):
        instance = super().save(commit=False)
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±—Ä–∞–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏
        instance.priorities = self.cleaned_data.get('priorities_selected', [])
        instance.traffic_sources = self.cleaned_data.get('traffic_sources_selected', [])
        instance.needed_features = self.cleaned_data.get('features_selected', [])
        
        if commit:
            instance.save()
        return instance 